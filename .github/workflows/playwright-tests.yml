name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      # Start services needed for tests
      backend:
        image: python:3.11
        ports:
          - 8001:8001
        env:
          FLASK_ENV: test
        options: >-
          --health-cmd "curl -f http://localhost:8001/api/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Start backend server
      run: |
        cd ${{ github.workspace }}
        python start_api.py &
        sleep 10
      env:
        FLASK_ENV: test
        
    - name: Start frontend server
      run: |
        cd ${{ github.workspace }}
        npm start &
        sleep 15
      env:
        CI: true
        
    - name: Run Playwright tests
      run: node run-tests.js
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results
        path: playwright-results/
        retention-days: 30
        
    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-videos
        path: playwright-results/videos/
        retention-days: 7
        
    - name: Comment PR with test results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = './playwright-results/test_summary.json';
          
          if (fs.existsSync(path)) {
            const results = JSON.parse(fs.readFileSync(path, 'utf8'));
            const body = `
            ## 🎭 Playwright Test Results
            
            **Status**: ${results.success ? '✅ PASSED' : '❌ FAILED'}
            **Tests Run**: ${results.total}
            **Passed**: ${results.passed}
            **Failed**: ${results.failed}
            **Duration**: ${results.duration}ms
            
            ${results.failed > 0 ? '**Failed Tests**:\n' + results.failures.map(f => `- ${f}`).join('\n') : ''}
            
            [View detailed results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          }